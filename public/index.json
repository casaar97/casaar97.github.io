[{"authors":["admin"],"categories":null,"content":"Estudiante del Grado de Ingeniería Informática de la Universidad de Córdoba. Especialidad: Software.\n","date":1551294613,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1551294613,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"https://casaar97.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"Estudiante del Grado de Ingeniería Informática de la Universidad de Córdoba. Especialidad: Software.","tags":null,"title":"Carlos Sánchez Arribas","type":"author"},{"authors":["admin"],"categories":null,"content":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\n","date":1551294613,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1551294613,"objectID":"3c6d3b026635189b3fe4915169b8e8a8","permalink":"https://casaar97.github.io/author/carlos/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/carlos/","section":"author","summary":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.","tags":null,"title":"Carlos Sánchez Arribas","type":"author"},{"authors":null,"categories":null,"content":" Table of Contents    Introducción Instalación de Hugo  Instalación de Hugo en MacOs: Instalación de Hugo en Linux Instalación de Hugo en Ubuntu/Debian  Creación de un proyecto Seleccionar y descargar un tema Subida del proyecto a Github Pages    Introducción En este tutorial vamos a aprender a crear un sitio web con Hugo.\nHugo es un generador de sitios web estáticos escrito en Go, y es software libre.\nLos generadores de sitios web estáticos, aunque tienen limitaciones, son muy interesantes por generar sitios muy rápidos y seguros.\nEl tutorial estará dividido en varias partes para facilitar su comprensión.\n\nInstalación de Hugo Para ver otras formas de instalar Hugo visita el siguiente enlace: Instalar Hugo.\nInstalación de Hugo en MacOs: brew update \u0026amp;\u0026amp; brew install hugo  Instalación de Hugo en Linux snap install hugo  Instalación de Hugo en Ubuntu/Debian sudo apt-get install hugo   Se recomienda utilizar snap para instalar Hugo en Ubuntu ya que en caso de utilizar apt-get se instalará la versión 0.40 de Hugo, la cual ya es antigua.\n  Una vez que hayamos instalado Hugo, es recomendable utilizar el siguiente comando para comprobar que todo ha salido correctamente.\nAdemás obtendremos información sobre la versión de Hugo.\nhugo version  Creación de un proyecto El primer paso es la creación del directorio del proyecto, en nuestro caso lo llamaremos proyecto:\nhugo new site proyecto  Una vez creado el directorio del proyecto, observaremos una serie de directorios en su interior:\n archetypes: Plantillas para la creación de contenido. config.toml: Archivo de configuración del sitio (Puede estar en formato TOML, YAML o JSON). content: Archivos con el contenido ordenado en carpetas que siguen la misma jerarquía que mostrará el contenido en el sitio público. Dicho contenido puede estar en formato Markdown o HTML. data: Contenido adicional para incluir en el sitio web. Esta carpeta contiene archivos en formato TOML, YAML, JSON, incluso CSV, y constituye una especie de base de datos de contenido estructurado y accesible a través de un sistema de objetos y propiedades. layouts: Plantillas en HTML, shortcodes\u0026hellip; public: Contienen el sitio web listo para publicar generado a partir del contenido de /content, los archivos estáticos de /static y según las reglas y las plantillas definidas en el resto de carpetas de Hugo. static: Archivos estáticos como hojas de estilo o imágenes. themes: Temas instalados.  Además, Hugo puede funcionar con git como sistema de control de cambios, de manera que el proyecto completo sea un repositorio.\nPara ello una vez creado el sitio se puede crear el repositorio en la carpeta:\ngit init  Seleccionar y descargar un tema Una vez hemos creado la carpeta de nuestro proyecto, vamos a seleccionar un tema para el mismo.\nLos temas se encuentran en la siguiente página.\nEn caso de querer descargar todos los temas utilizaremos el siguiente comando:\ngit clone --depth 1 --recursive https://github.com/gohugoio/hugoThemes.git themes  En caso de querer descargar un tema en concreto y una vez localizado el tema que queremos utilizar, usamos el siguiente comando:\ncd proyecto cd themes git clone URL_TEMA  Otra opción es añadir el tema como un submódulo de nuestro proyecto:\ngit init (En caso de no haberlo hecho anteriormente) git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke echo 'theme = \u0026quot;ananke\u0026quot;' \u0026gt;\u0026gt; config.toml  En nuestro caso vamos a instalar el tema \u0026ldquo;Minimal Academic\u0026ldquo;\nSubida del proyecto a Github Pages ","date":1551139200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1551294613,"objectID":"e6e6a3a74608c755e654b00a6feb9ad3","permalink":"https://casaar97.github.io/tutorial/creating-a-new-theme/","publishdate":"2019-02-26T00:00:00Z","relpermalink":"/tutorial/creating-a-new-theme/","section":"tutorial","summary":"Table of Contents    Introducción Instalación de Hugo  Instalación de Hugo en MacOs: Instalación de Hugo en Linux Instalación de Hugo en Ubuntu/Debian  Creación de un proyecto Seleccionar y descargar un tema Subida del proyecto a Github Pages    Introducción En este tutorial vamos a aprender a crear un sitio web con Hugo.\nHugo es un generador de sitios web estáticos escrito en Go, y es software libre.","tags":null,"title":"Creando un sitio web con Hugo","type":"tutorial"}]